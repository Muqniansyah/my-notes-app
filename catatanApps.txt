Proyek Akhir: Membangun Aplikasi Catatan Menggunakan React

#pengantar
Selamat! Akhirnya Anda telah sampai di penghujung pembelajaran. Anda telah:

Berkenalan dengan React, mengetahui alasan mempelajari React, dan mengenal ekosistem yang ada di React.
Belajar tentang konsep dasar React seperti composition, declarative code, unidirectional data flow, dan menyadari bahwa React hanyalah JavaScript
Belajar tentang membangun UI di React seperti mengenal element dan component. Serta, belajar juga konsep component properti yang membuat UI aplikasi bersifat reusable.
Belajar tentang class component, menggunakan state di dalam component, mengubah nilai state berdasarkan event handling, serta memahami dan mempraktikkan controlled component.

Untuk bisa lulus dan mendapatkan sertifikat dari akademi ini, Anda harus mengerjakan tugas yakni membuat proyek “Aplikasi Catatan Pribadi” sesuai kriteria yang tertera. Tim Reviewer akan memeriksa pekerjaan Anda dan memberikan reviu pada proyek yang Anda buat.


#kriteria
Buatlah aplikasi web menggunakan React yang dapat menambahkan dan menghapus catatan. Agar lebih jelasnya, berikut 3 kriteria utama pada “Aplikasi Catatan Pribadi” yang harus Anda buat.


Kriteria Utama 1: Mampu Menampilkan Daftar Catatan
Aplikasi harus mampu menampilkan daftar catatan dengan data awal (initial data) yang telah kami sediakan.
Memanfaatkan state component untuk menyimpan data catatan.
Menggunakan teknik array map untuk menampilkan daftar catatan.


Kriteria Utama 2: Mampu Menambahkan Catatan
Aplikasi harus mampu menambahkan data catatan baru.
Memanfaatkan controlled component dalam membuat form input.
Data catatan disimpan cukup pada memori saja (akan hilang jika browser di-refresh).
Data catatan yang disimpan merupakan objek JavaScript dengan struktur berikut

{
  id: number | string,
  title: string,
  body: string,
  archived: boolean, 
  createdAt: string,
}
Berikut contoh data riilnya:

{
    id: 1,
    title: "Babel",
    body: "Babel merupakan tools open-source yang digunakan untuk mengubah sintaks ECMAScript 2015+ menjadi sintaks yang didukung oleh JavaScript engine versi lama. Babel sering dipakai ketika kita menggunakan sintaks terbaru termasuk sintaks JSX.",
    archived: false,
    createdAt: '2022-04-14T04:27:34.572Z'
  },
Catatan:
Untuk id pada tiap catatan yang disimpan haruslah unik. Tips dalam menetapkan nilai untuk adalah Anda bisa memanfaatkan nilai timestamp. Untuk mendapatkan nilai timestamp di JavaScript cukup mudah, cukup dengan menuliskan expressions +new Date().


Kriteria Utama 3: Mampu Menghapus Catatan
Aplikasi harus menyediakan tombol hapus untuk menghapus data catatan yang disimpan.
Terdapat conditional rendering di mana bila tidak terdapat data catatan, maka UI menampilkan pesan “Tidak ada catatan” atau pesan apa pun yang mengindikasikan data catatan kosong.


Selain kriteria utama, terdapat kriteria opsional yang yang dapat Anda penuhi agar mendapat nilai yang lebih tinggi.


Kriteria Opsional 1: Terdapat Fitur Pencarian Catatan
Aplikasi memiliki fitur pencarian catatan berdasarkan kata kunci yang dimasukkan, dengan ketentuan:
Jika kolom pencarian tidak kosong, maka aplikasi hanya menampilkan daftar catatan yang judulnya mengandung kata kunci yang dimasukkan.
Jika kolom pencariannya kosong, maka aplikasi menampilkan seluruh catatan.
Memanfaatkan controlled component dalam membangun fitur catatan.


Kriteria Opsional 2: Terdapat Limit Karakter pada Input Judul Catatan
Aplikasi dapat mencegah pengguna untuk memberikan judul catatan lebih dari 50 karakter.
Menggunakan state dalam melimitasi, bukan atribut maxlength.
Menampilkan jumlah karakter tersisa yang dapat digunakan oleh pengguna.


Kriteria Opsional 3: Terdapat Fitur Arsip Catatan
Aplikasi memiliki fitur arsip catatan.
Aplikasi harus menyediakan tombol arsipkan/pindahkan untuk mengarsipkan atau memindahkan catatan dari arsip.
Daftar catatan yang diarsip harus ditampilkan pada tempat terpisah dari catatan yang tidak diarsip.

#penilaian

Submission Anda akan dinilai oleh Reviewer dengan skala 1-5. Untuk mendapatkan nilai tinggi, Anda bisa menerapkan beberapa saran berikut:

Menerapkan kriteria opsional 1: Terdapat Fitur Pencarian Catatan.
Menerapkan kriteria opsional 2: Terdapat Limit Karakter pada Input Judul Catatan.
Menerapkan kriteria opsional 3: Terdapat Fitur Arsip Catatan.
Menuliskan kode dengan baik:
Tidak membuat class component yang tidak diperlukan.
Memecah UI menjadi komponen sekecil mungkin (sesuai tanggung jawabnya).
Gaya penulisan kode harus konsisten.
Berikut adalah detail penilaian submission:

rating-default-1
Semua ketentuan wajib terpenuhi, namun terdapat indikasi kecurangan dalam mengerjakan submission.

rating-default-2
Semua ketentuan wajib terpenuhi, namun terdapat kekurangan pada penulisan kode. Seperti tidak menerapkan modularization atau gaya penulisan tidak konsisten.

rating-default-3
Semua ketentuan wajib terpenuhi, namun tidak terdapat improvisasi atau persyaratan opsional yang dipenuhi.

rating-default-4
Semua ketentuan wajib terpenuhi dan menerapkan minimal dua saran di atas.

rating-default-5
Semua ketentuan wajib terpenuhi dan menerapkan seluruh saran di atas.

Catatan:
Jika submission Anda ditolak maka tidak ada penilaian. Kriteria penilaian bintang di atas hanya berlaku jika submission Anda diterima.


#lainnya

Ketentuan Berkas Submission
Berkas submission yang dikirim merupakan folder proyek dari Aplikasi Catatan Pribadi dalam bentuk ZIP. 
Folder yang dikirim merupakan proyek React yang di-render menggunakan react-dom bukan react-native.
Hapus folder node_modules ke dalam berkas ZIP. Karena akan membuat berkas ZIP memiliki ukuran yang besar dan fitur code review tidak dapat berfungsi.
Anda boleh menambahkan berkas aset seperti gambar selama aset tersebut digunakan pada proyek Anda.



Submission Anda akan Ditolak Bila
Kriteria utama tidak terpenuhi.
Ketentuan berkas submission tidak terpenuhi.
Menggunakan framework atau UI library selain React.
Mengirimkan kode JavaScript yang telah di-minify.
Melakukan kecurangan seperti tindakan plagiasi.



Ketentuan Proses Review
Beberapa hal yang perlu Anda ketahui mengenai proses review:

Tim Reviewer akan mengulas submission Anda dalam waktu selambatnya 3 (tiga) hari kerja (tidak termasuk Sabtu, Minggu, dan hari libur nasional).
Tidak disarankan untuk melakukan submit berkali-kali karena akan memperlama proses penilaian.
Anda akan mendapatkan notifikasi hasil review submission via email. Status submission juga bisa dilihat dengan mengecek di halaman submission.
